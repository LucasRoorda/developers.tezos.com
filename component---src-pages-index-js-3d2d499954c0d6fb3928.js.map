{"version":3,"sources":["webpack:///./src/components/NumberTitle.js","webpack:///./src/components/PostList.js","webpack:///./src/components/EqualHeight.js","webpack:///./src/components/PostListGroup.js","webpack:///./src/components/SectionHeading.js","webpack:///./src/components/TextInput.js","webpack:///./src/components/MailSignup.js","webpack:///./src/components/HomeHeroContent.js","webpack:///./src/utils/content-helpers.js","webpack:///./src/pages/index.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","Heading","NumberTitle","_ref","number","children","core_browser_esm","CircleIcon","Header","palette","blue","HeaderTitle","Content","grey","PostList","titleRef","id","title","link","ref","EqualHeight","nodes","handleResize","debounce","dimensionsList","map","node","current","filter","a","style","height","maxHeight","minHeight","_node$getBoundingClie","getBoundingClientRect","top","values","reduce","accumulator","_ref2","push","forEach","group","heightList","item","Math","max","apply","_toConsumableArray","_ref3","useEffect","window","addEventListener","removeEventListener","setTimeout","react_default","Fragment","ThreeColumn","css","breakpoints","mobile","FourColumn","tablet","props","columns","PostListGroup","_ref$columns","refList","useRef","components_EqualHeight","PostListGroup_Container","SectionHeading","centered","StyledInput","white","useMailchimp","emailRef","_useState","useState","message","setMessage","_useState2","status","setStatus","handleSubmit","regenerator_default","mark","_callee","ev","value","data","wrap","_context","prev","next","preventDefault","addToMailchimp","group[9][2]","sent","msg","result","stop","_x","this","arguments","MailSignupContainer","LayoutContainer","Response","MailSignup","_useMailchimp","onSubmit","htmlFor","TextInput","type","placeholder","required","ButtonAnchor","isAnchor","isSmall","isSecondary","dangerouslySetInnerHTML","__html","SocialLinks","Rule","HomeHeroContent","HomeHeroContent_Container","href","label","social_reddit_default","social_riot_default","social_stackexchange_default","components_MailSignup","getMarkdownFiles","allMarkdownRemark","edges","assign","frontmatter","html","ResourceList","list","i","_ref2$preTitleText","preTitleText","key","length","rel","Wrapper","ShellWrapper","CalloutGroup","lightGrey","Section","SiteIndex","location","_4149665578","notificationBarContent","file","structureNotificationBarContent","gettingStartedContent","structureGettingStartedContent","resourcesContent","structureResourcesContent","Layout","subtitle","heroContent","components_HomeHeroContent","SEO","components_PostListGroup","_ref4","index","description","tutorials","languages","resources","components_PostList","components_NumberTitle","pages_ResourceList","components_SectionHeading","_ref5","slug","maxContent","resourceList","slice","_ref6"],"mappings":"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","file":"component---src-pages-index-js-3d2d499954c0d6fb3928.js","sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport CircleIcon from './CircleIcon'\n\nconst NumberTitle = ({\n  number,\n  children\n}) => (\n  <Container>\n    <CircleIcon><span>{number}</span></CircleIcon>\n    <Heading>{children}</Heading>\n  </Container>\n)\n\nconst Container = styled.div`\n  display: flex;\n  align-items: self-end;\n`\n\nconst Heading = styled.h3`\n  font-size: 19px;\n  flex-grow: 1;\n  margin-left: 12px;\n`\n\nexport default NumberTitle\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { palette } from \"../utils/variables\"\n\nconst PostList = ({\n  titleRef,\n  id,\n  title,\n  link,\n  children\n}) => (\n  <div id={id}>\n    <Header ref={titleRef}>\n      <HeaderTitle>{title}</HeaderTitle>\n    </Header>\n    <Content>\n      {children}\n    </Content>\n  </div>\n)\n\nconst Header = styled.header`\n  display: flex;\n  border-bottom: 3px solid ${palette.blue};\n  padding-bottom: 20px;\n  width: 100%;\n`\nconst HeaderTitle = styled.div`\n  flex-grow: 1;\n\n  h3 {\n    margin-bottom: 0;\n  }\n`\n\nconst Content = styled.div`\n  margin-top: 30px;\n\n  & > * + * {\n    margin-top: 10px;\n  }\n\n  h4 {\n    margin-top: 25px;\n    margin-bottom: 18px;\n  }\n\n  ul {\n    list-style: none;\n    margin: 0;\n  }\n\n  li {\n    margin: 0;\n    padding: 0 0 8px 0;\n    border-bottom: 1px solid ${palette.grey};\n\n    & + li {\n      padding-top: 8px;\n    }\n\n    p {\n      margin: 0;\n\n      & + p {\n        margin-top: -2px;\n      }\n    }\n\n    small {\n      line-height: 20px;\n    }\n  }\n`\n\nexport default PostList\n","import React, { useEffect } from \"react\"\nimport debounce from \"lodash.debounce\"\n\nconst EqualHeight = ({ nodes, children }) => {\n  const handleResize = debounce(() => {\n    const currentNodes = nodes.map(node => node.current).filter(a => a)\n    const dimensionsList = currentNodes.map(node => {\n      // remove any forced sizing information\n      node.style.height = 'auto'\n      node.style.maxHeight = ''\n      node.style.minHeight = ''\n\n      // get natural size\n      const { top, height } = node.getBoundingClientRect()\n      return { node, top, height }\n    })\n\n    // group nodes by top offset\n    const nodeGroups = Object.values(\n      dimensionsList.reduce((accumulator, { node, top, height }) => {\n        if (!accumulator[top]) accumulator[top] = []\n        accumulator[top].push({ node, height })\n        return accumulator\n      }, { })\n    )\n\n    // get max height and update height for each group\n    nodeGroups.forEach((group) => {\n      const heightList = group.map(item => item.height)\n      const maxHeight = Math.max(...heightList)\n\n      // update height using the max height\n      group.forEach(({ node }) => {\n        node.style.height = `${maxHeight}px`;\n      })\n    })\n  }, 50)\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    }\n  })\n\n  // init\n  setTimeout(handleResize)\n\n  return (\n    <React.Fragment>\n      {children}\n    </React.Fragment>\n  )\n}\n\nexport default EqualHeight\n","import React, { useRef } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/core\"\nimport EqualHeight from \"./EqualHeight\"\nimport { breakpoints } from \"../utils/variables\"\n\n// expects children to be a render prop so we can pass refs for EqualHeight\nconst PostListGroup = ({ columns = 3, children }) => {\n  // statically define refs even if less columns are used\n  const refList = [\n    useRef(null),\n    useRef(null),\n    useRef(null),\n    useRef(null)\n  ]\n\n  return (\n    <EqualHeight nodes={refList}>\n      <Container columns={columns}>\n        {children(refList)}\n      </Container>\n    </EqualHeight>\n  )\n}\n\nconst ThreeColumn = css`\n  @media (min-width: ${breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fill, minmax(30%, 1fr));\n  }\n`\nconst FourColumn = css`\n  @media (min-width: ${breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fill, minmax(45%, 1fr));\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fill, minmax(20%, 1fr));\n  }\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\n  grid-gap: 40px;\n\n  ${props => props.columns === 3 ? ThreeColumn : FourColumn }\n`\n\nexport default PostListGroup\n","import styled from \"@emotion/styled\"\nimport { palette } from \"../utils/variables\"\n\nconst SectionHeading = styled.h2`\n  border-bottom: 1px solid ${palette.grey};\n  padding-bottom: 30px;\n  text-align: ${props => props.centered && 'center'};\n`\n\nexport default SectionHeading\n","import styled from \"@emotion/styled\"\nimport { palette } from \"../utils/variables\"\n\nconst StyledInput = styled.input`\n  padding: 7px 0;\n  background: transparent;\n  border: 0 solid rgba(255, 255, 255, 0.5);\n  border-bottom-width: 1px;\n  border-radius: 0;\n  color: ${palette.white};\n  font-size: 14px;\n  font-weight: 300;\n  line-height: 24px;\n  width: 100%;\n  appearance: none;\n  margin-bottom: 0px;\n\n  &:focus {\n    border-color: rgba(255, 255, 255, 1);\n    outline: none;\n  }\n\n  &::placeholder {\n    color: white;\n    opacity: 1;\n  }\n`\n\nexport default StyledInput\n","import React, { useState, useRef } from \"react\"\nimport styled from \"@emotion/styled\"\nimport addToMailchimp from \"gatsby-plugin-mailchimp\"\nimport ButtonAnchor from \"./ButtonAnchor\"\nimport TextInput from \"./TextInput\"\nimport { breakpoints } from \"../utils/variables\"\n\nconst useMailchimp = (emailRef) => {\n  const [message, setMessage] = useState(null)\n  const [status, setStatus] = useState(null)\n\n  const handleSubmit = async ev => {\n    ev.preventDefault()\n\n    const { value } = emailRef.current\n    const data = await addToMailchimp(value, {\n      'group[9][2]': '2'\n    })\n\n    setMessage(data.msg)\n    setStatus(data.result)\n  }\n\n  return {\n    message,\n    status,\n    handleSubmit\n  }\n}\n\nconst MailSignup = () => {\n  const emailRef = useRef()\n  const { message, status, handleSubmit } = useMailchimp(emailRef)\n\n  return (\n    <MailSignupContainer onSubmit={handleSubmit}>\n      <LayoutContainer>\n        <label htmlFor=\"email\">Developer Mailing List</label>\n        <TextInput\n          ref={emailRef}\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n        />\n        <ButtonAnchor\n          type=\"submit\"\n          isAnchor={false}\n          isSmall\n          isSecondary\n        >\n          Submit\n        </ButtonAnchor>\n      </LayoutContainer>\n      {\n        message &&\n        <Response status={status} dangerouslySetInnerHTML={{ __html: message }} />\n      }\n    </MailSignupContainer>\n  )\n}\n\nconst getMessageColor = ({ status }) => {\n  switch (status) {\n    case 'error': return 'red'\n    case 'success': return 'green'\n    case 'ready':\n    default:\n      return 'white'\n  }\n}\n\nconst MailSignupContainer = styled.form`\n  position: relative;\n  max-width: 320px;\n  width: 100%;\n\n  label {\n    white-space: nowrap;\n    font-weight: 300;\n    font-size: 18px;\n  }\n\n  input {\n    margin: 10px 0 20px;\n    max-width: 400px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    max-width: 100%;\n\n    input {\n      margin: 2px 20px 0;\n    }\n\n    button {\n      align-self: flex-end;\n    }\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    border-top: none;\n    border-left: 1px solid rgba(255, 255, 255, 0.2);\n    margin-left: 40px;\n    padding-left: 40px;\n  }\n`\n\nconst LayoutContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: column wrap;\n  width: 100%;\n\n  @media (min-width: ${breakpoints.mobile}) {\n    align-items: center;\n    flex-flow: row nowrap;\n  }\n`\n\nconst Response = styled.p`\n  position: absolute;\n  margin-top: 20px;\n  color: ${getMessageColor};\n`\n\nexport default MailSignup\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport MailSignup from \"./MailSignup\"\nimport CircleIcon from \"./CircleIcon\"\nimport { breakpoints } from \"../utils/variables\"\n\n// images\nimport RedditIcon from \"../assets/social-reddit.svg\"\nimport RiotIcon from \"../assets/social-riot.svg\"\nimport StackexchangeIcon from \"../assets/social-stackexchange.svg\"\n\nconst HomeHeroContent = () => (\n  <Container>\n    <SocialLinks>\n      <li>\n        <CircleIcon href=\"https://www.reddit.com/r/tezos\" label=\"Reddit\">\n          <RedditIcon />\n        </CircleIcon>\n      </li>\n      <li>\n        <CircleIcon href=\"https://riot.im/app/#/room/#freenode_#tezos:matrix.org\" label=\"Riot\">\n          <RiotIcon />\n        </CircleIcon>\n      </li>\n      <li>\n        <CircleIcon href=\"https://tezos.stackexchange.com/\" label=\"Stack Exchange\">\n          <StackexchangeIcon/>\n        </CircleIcon>\n      </li>\n    </SocialLinks>\n\n    <Rule />\n\n    <MailSignup />\n  </Container>\n)\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n\n  @media (min-width: ${breakpoints.mobile}) {\n    align-items: flex-start;\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    flex-flow: row nowrap;\n  }\n`\n\nconst SocialLinks = styled.ul`\n  display: inline-flex;\n  list-style: none;\n  margin: 0;\n\n  li {\n    margin-bottom: 0;\n  }\n\n  li + li {\n    margin-left: 12px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    display: flex;\n  }\n`\n\nconst Rule = styled.hr`\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n  margin: 40px auto;\n  width: 100%;\n\n  @media (min-width: ${breakpoints.mobile}) {\n    margin-left: 0;\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    display: none\n  }\n`\n\nexport default HomeHeroContent\n","export const getMarkdownFiles = (data) => {\n  return data.allMarkdownRemark.edges.map(({ node }) => ({\n    ...node.frontmatter,\n    html: node.html\n  }))\n}\n\nexport const structureNotificationBarContent = (data) => {\n  const files = getMarkdownFiles(data)\n  return files.filter(file => file.type === 'notification-bar')[0]\n}\n\nexport const structureGettingStartedContent = (data) => {\n  const files = getMarkdownFiles(data)\n  return files.filter(file => file.type === 'getting-started')\n}\n\nexport const structureResourcesContent = (data) => {\n  const files = getMarkdownFiles(data)\n  return files.filter(file => file.type === 'resource')\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport SEO from \"../components/SEO\"\nimport Layout from \"../components/Layout\"\nimport ShellWrapper from \"../components/ShellWrapper\"\nimport NumberTitle from \"../components/NumberTitle\"\nimport PostList from \"../components/PostList\"\nimport PostListGroup from \"../components/PostListGroup\"\nimport SectionHeading from \"../components/SectionHeading\"\nimport HomeHeroContent from \"../components/HomeHeroContent\"\nimport { palette, breakpoints } from \"../utils/variables\"\nimport {\n  structureNotificationBarContent,\n  structureGettingStartedContent,\n  structureResourcesContent,\n} from \"../utils/content-helpers\"\n\nconst query = graphql`\n  {\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___priority] }\n      filter: {\n        frontmatter: {\n          type: { regex: \"/(resource|getting-started|notification-bar)/\" }\n        }\n      }\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            type\n            slug\n            title\n            description\n            priority\n            maxContent\n            tutorials {\n              title\n              link\n            }\n            languages {\n              title\n              preTitleText\n              link\n            }\n            resources {\n              title\n              link\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ResourceList = ({ list }) => {\n  return (\n    <ul>\n      {list.map(({ title, preTitleText = \"\", link }, i) => (\n        <li key={`${link}-${i}`}>\n          {preTitleText.length > 0 && `${preTitleText} | `}\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {title}\n          </a>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nconst SiteIndex = ({ location }) => {\n  const data = useStaticQuery(query)\n  const notificationBarContent = structureNotificationBarContent(data)\n  const gettingStartedContent = structureGettingStartedContent(data)\n  const resourcesContent = structureResourcesContent(data)\n\n  return (\n    <Layout\n      location={location}\n      notificationBarContent={notificationBarContent}\n      title=\"Tezos Developer Portal\"\n      subtitle=\"Resources for Developers\"\n      heroContent={<HomeHeroContent />}\n    >\n      <SEO />\n\n      <Wrapper>\n        <CalloutGroup>\n          <h2>Getting Started</h2>\n\n          <PostListGroup columns={gettingStartedContent.length}>\n            {refList =>\n              gettingStartedContent.map(\n                (\n                  { title, description, tutorials, languages, resources },\n                  index\n                ) => (\n                  <PostList\n                    key={title}\n                    titleRef={refList[index]}\n                    title={\n                      <NumberTitle number={index + 1}>{title}</NumberTitle>\n                    }\n                  >\n                    <p>\n                      <small>{description}</small>\n                    </p>\n\n                    {tutorials && tutorials.length > 0 && (\n                      <React.Fragment>\n                        <ResourceList list={tutorials} />\n                      </React.Fragment>\n                    )}\n\n                    {languages && languages.length > 0 && (\n                      <React.Fragment>\n                        <ResourceList list={languages} />\n                      </React.Fragment>\n                    )}\n\n                    {resources && resources.length > 0 && (\n                      <React.Fragment>\n                        <ResourceList list={resources} />\n                      </React.Fragment>\n                    )}\n                  </PostList>\n                )\n              )\n            }\n          </PostListGroup>\n        </CalloutGroup>\n\n        <Section>\n          <SectionHeading centered>Resources</SectionHeading>\n\n          <PostListGroup columns={resourcesContent.length}>\n            {refList =>\n              resourcesContent.map(({ title, slug, resources, maxContent }, index) => {\n                // Sometimes we want to limit the content on the homepage\n                let resourceList = resources;\n                // If the maxContent is -1 it means we want to show everything\n                if (maxContent > -1) {\n                  resourceList = resourceList.slice(0, maxContent);\n                }\n                return (\n                  <PostList\n                    key={title}\n                    titleRef={refList[index]}\n                    title={<h3>{title}</h3>}\n                    link={`/resources#${slug}`}\n                  >\n                    <ul>\n                      {resourceList.map(({ link, title, description }) => (\n                        <li key={link}>\n                          <p>\n                            <a\n                              href={link}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              {title}\n                            </a>\n                          </p>\n                          <p>\n                            <small>{description}</small>\n                          </p>\n                        </li>\n                      ))}\n                    </ul>\n                  </PostList>\n                )\n              })\n            }\n          </PostListGroup>\n        </Section>\n      </Wrapper>\n    </Layout>\n  )\n}\n\n/* Content components */\nconst Wrapper = styled(ShellWrapper)`\n  padding-top: 20px;\n\n  & > * + * {\n    margin-top: 60px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    padding-top: 40px;\n\n    & > * + * {\n      margin-top: 80px;\n    }\n  }\n`\n\n/* Callout section */\nconst CalloutGroup = styled.section`\n  padding: 40px 20px 20px;\n  background-color: ${palette.lightGrey};\n\n  & > h2 {\n    text-align: center;\n    margin-bottom: 40px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    padding: 64px 40px 40px;\n\n    & > h2 {\n      margin-bottom: 64px;\n    }\n  }\n`\n\nconst Section = styled.section`\n  & > * + * {\n    margin-top: 40px;\n  }\n`\n\nexport default SiteIndex\n"],"sourceRoot":""}